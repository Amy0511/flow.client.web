// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Overview --- Snapshot +++ renders correctly 1`] = `
<div
  className="c-worklfow-overview"
>
  <div
    className="c-overview-card"
  >
    <h1
      className="s-general-info-title"
    >
      General
    </h1>
    <div
      className="bmrg--c-select-dropdown --bmrg-white"
      style={
        Object {
          "marginBottom": "2rem",
        }
      }
    >
      <label
        className="s-select-dropdown-label"
      >
        Team
      </label>
      <div
        className="Select has-value is-searchable Select--single"
      >
        <div
          className="Select-control"
          onKeyDown={[Function]}
          onMouseDown={[Function]}
          onTouchEnd={[Function]}
          onTouchMove={[Function]}
          onTouchStart={[Function]}
        >
          <span
            className="Select-multi-value-wrapper"
            id="react-select-2--value"
          >
            <div
              className="Select-value"
            >
              <span
                aria-selected="true"
                className="Select-value-label"
                id="react-select-2--value-item"
                role="option"
              >
                Lucas' team
              </span>
            </div>
            <div
              className="Select-input"
              style={
                Object {
                  "display": "inline-block",
                }
              }
            >
              <input
                aria-activedescendant="react-select-2--value"
                aria-expanded="false"
                aria-haspopup="false"
                aria-owns=""
                onBlur={[Function]}
                onChange={[Function]}
                onFocus={[Function]}
                required={false}
                role="combobox"
                style={
                  Object {
                    "boxSizing": "content-box",
                    "width": "5px",
                  }
                }
                value=""
              />
              <div
                style={
                  Object {
                    "height": 0,
                    "left": 0,
                    "overflow": "scroll",
                    "position": "absolute",
                    "top": 0,
                    "visibility": "hidden",
                    "whiteSpace": "pre",
                  }
                }
              >
                
              </div>
            </div>
          </span>
          <span
            className="Select-arrow-zone"
            onMouseDown={[Function]}
          >
            <div
              className="bmrg--b-select-default-arrow"
            />
          </span>
        </div>
      </div>
    </div>
    <div
      className="bmrg--c-text-input"
    >
      <label
        className="bmrg--s-text-input-title --visible --bmrg-white"
      >
        Name
      </label>
      <div
        className="bmrg--b-text-input"
      >
        <input
          className="bmrg--b-text-input__input --bmrg-white"
          disabled={false}
          name="name"
          onBlur={[Function]}
          onChange={[Function]}
          placeholder="Name"
          required={true}
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="bmrg--c-text-input"
    >
      <label
        className="bmrg--s-text-input-title --visible --bmrg-white"
      >
        Summary
      </label>
      <div
        className="bmrg--b-text-input"
      >
        <input
          className="bmrg--b-text-input__input --bmrg-white"
          disabled={false}
          name="shortDescription"
          onBlur={[Function]}
          onChange={[Function]}
          placeholder="Summary"
          required={false}
          type="text"
          value=""
        />
      </div>
    </div>
    <div
      className="bmrg--b-textarea"
    >
      <label
        className="bmrg--b-textarea__title --visible --bmrg-white"
      >
        Description
      </label>
      <textarea
        className="bmrg--b-textarea__text"
        name="description"
        onBlur={[Function]}
        onChange={[Function]}
        placeholder="Description"
        required={false}
        value=""
      />
    </div>
    <h2
      className="s-workflow-icons-title"
    >
      Icon
    </h2>
    <ul
      className="b-workflow-icons"
    >
      <li>
        <img
          alt="docs icon"
          className="b-workflow-icons__icon"
          onClick={[Function]}
          src="document_32.svg"
        />
      </li>
      <li>
        <img
          alt="secure icon"
          className="b-workflow-icons__icon"
          onClick={[Function]}
          src="secure.svg"
        />
      </li>
      <li>
        <img
          alt="flow icon"
          className="b-workflow-icons__icon"
          onClick={[Function]}
          src="flow.svg"
        />
      </li>
      <li>
        <img
          alt="log icon"
          className="b-workflow-icons__icon"
          onClick={[Function]}
          src="log.svg"
        />
      </li>
      <li>
        <img
          alt="payment icon"
          className="b-workflow-icons__icon"
          onClick={[Function]}
          src="payment.svg"
        />
      </li>
      <li>
        <img
          alt="diagram icon"
          className="b-workflow-icons__icon"
          onClick={[Function]}
          src="diagram.svg"
        />
      </li>
      <li>
        <img
          alt="utility icon"
          className="b-workflow-icons__icon"
          onClick={[Function]}
          src="utility.svg"
        />
      </li>
      <li>
        <img
          alt="template icon"
          className="b-workflow-icons__icon"
          onClick={[Function]}
          src="template.svg"
        />
      </li>
    </ul>
  </div>
  <div
    className="c-overview-card"
  >
    <h1
      className="s-trigger-title"
    >
      Triggers
    </h1>
    <div
      className="c-webhook"
    >
      <form
        className="b-webhook"
      >
        <label
          className="b-webhook__title"
          id="toggle-webhook"
        >
          Enable Webhook
        </label>
        <div
          className="b-webhook__toggle --bmrg-white --red"
          style={
            Object {
              "MozTransition": "opacity 0.25s",
              "MozUserSelect": "none",
              "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
              "WebkitTransition": "opacity 0.25s",
              "WebkitUserSelect": "none",
              "borderRadius": 10,
              "display": "inline-block",
              "msUserSelect": "none",
              "opacity": 1,
              "position": "relative",
              "textAlign": "left",
              "touchAction": "none",
              "transition": "opacity 0.25s",
              "userSelect": "none",
            }
          }
        >
          <div
            className="react-switch-bg"
            onClick={[Function]}
            onMouseDown={[Function]}
            style={
              Object {
                "MozTransition": "background 0.25s",
                "WebkitTransition": "background 0.25s",
                "background": "#486c89",
                "borderRadius": 10,
                "cursor": "pointer",
                "height": 20,
                "margin": 0,
                "position": "relative",
                "transition": "background 0.25s",
                "width": 40,
              }
            }
          />
          <div
            className="react-switch-handle"
            onClick={[Function]}
            onMouseDown={[Function]}
            onTouchCancel={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "MozTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                "WebkitTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                "background": "#ff806c",
                "border": 0,
                "borderRadius": "50%",
                "boxShadow": null,
                "cursor": "pointer",
                "display": "inline-block",
                "height": 18,
                "outline": 0,
                "position": "absolute",
                "top": 1,
                "transform": "translateX(1px)",
                "transition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                "width": 18,
              }
            }
          />
          <input
            aria-labelledby="toggle-webhook"
            checked={false}
            disabled={false}
            name="webhook"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            role="switch"
            style={
              Object {
                "border": 0,
                "clip": "rect(0 0 0 0)",
                "height": 1,
                "margin": -1,
                "overflow": "hidden",
                "padding": 0,
                "position": "absolute",
                "width": 1,
              }
            }
            type="checkbox"
          />
        </div>
        <img
          alt="Toggle webhook"
          className="b-options__infoIcon"
          data-for="triggers-webhook-info"
          data-tip={true}
          src="info.svg"
        />
        <div
          className="__react_component_tooltip place-top type-dark "
          data-id="tooltip"
          id="triggers-webhook-info"
        >
          Enable workflow to be executed by a webhook
        </div>
      </form>
      
      <div
        className="c-scheduler"
      >
        <div
          className="b-schedule"
        >
          <label
            className="b-schedule__title"
            id="toggle-scheduler"
          >
            Enable Scheduler
          </label>
          <div
            className="b-schedule__toggle --bmrg-black --red"
            style={
              Object {
                "MozTransition": "opacity 0.25s",
                "MozUserSelect": "none",
                "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
                "WebkitTransition": "opacity 0.25s",
                "WebkitUserSelect": "none",
                "borderRadius": 10,
                "display": "inline-block",
                "msUserSelect": "none",
                "opacity": 1,
                "position": "relative",
                "textAlign": "left",
                "touchAction": "none",
                "transition": "opacity 0.25s",
                "userSelect": "none",
              }
            }
          >
            <div
              className="react-switch-bg"
              onClick={[Function]}
              onMouseDown={[Function]}
              style={
                Object {
                  "MozTransition": "background 0.25s",
                  "WebkitTransition": "background 0.25s",
                  "background": "#486c89",
                  "borderRadius": 10,
                  "cursor": "pointer",
                  "height": 20,
                  "margin": 0,
                  "position": "relative",
                  "transition": "background 0.25s",
                  "width": 40,
                }
              }
            />
            <div
              className="react-switch-handle"
              onClick={[Function]}
              onMouseDown={[Function]}
              onTouchCancel={[Function]}
              onTouchEnd={[Function]}
              onTouchMove={[Function]}
              onTouchStart={[Function]}
              style={
                Object {
                  "MozTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "WebkitTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "background": "#ff806c",
                  "border": 0,
                  "borderRadius": "50%",
                  "boxShadow": null,
                  "cursor": "pointer",
                  "display": "inline-block",
                  "height": 18,
                  "outline": 0,
                  "position": "absolute",
                  "top": 1,
                  "transform": "translateX(1px)",
                  "transition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                  "width": 18,
                }
              }
            />
            <input
              aria-labelledby="toggle-scheduler"
              checked={false}
              disabled={false}
              name="schedule"
              onBlur={[Function]}
              onChange={[Function]}
              onFocus={[Function]}
              onKeyUp={[Function]}
              role="switch"
              style={
                Object {
                  "border": 0,
                  "clip": "rect(0 0 0 0)",
                  "height": 1,
                  "margin": -1,
                  "overflow": "hidden",
                  "padding": 0,
                  "position": "absolute",
                  "width": 1,
                }
              }
              type="checkbox"
            />
          </div>
          <img
            alt="Toggle scheduler"
            className="b-options__infoIcon"
            data-for="triggers-scheduler-info"
            data-tip={true}
            src="info.svg"
          />
          <div
            className="__react_component_tooltip place-top type-dark "
            data-id="tooltip"
            id="triggers-scheduler-info"
          >
            Enable workflow to be executed by a schedule
          </div>
        </div>
        <div
          className="b-schedule__cronMessage"
        />
        <div
          className="b-schedule__timezone"
        />
      </div>
    </div>
  </div>
  <div
    className="c-overview-card"
  >
    <h1
      className="s-trigger-title"
    >
      Options
    </h1>
    <div
      className="b-options"
    >
      <form
        className="b-persistence"
      >
        <label
          className="b-persistence__title"
          id="toggle-persistence-storage"
        >
          Enable Persistent Storage
        </label>
        <div
          className="b-persistence__toggle --bmrg-white --red"
          style={
            Object {
              "MozTransition": "opacity 0.25s",
              "MozUserSelect": "none",
              "WebkitTapHighlightColor": "rgba(0, 0, 0, 0)",
              "WebkitTransition": "opacity 0.25s",
              "WebkitUserSelect": "none",
              "borderRadius": 10,
              "display": "inline-block",
              "msUserSelect": "none",
              "opacity": 1,
              "position": "relative",
              "textAlign": "left",
              "touchAction": "none",
              "transition": "opacity 0.25s",
              "userSelect": "none",
            }
          }
        >
          <div
            className="react-switch-bg"
            onClick={[Function]}
            onMouseDown={[Function]}
            style={
              Object {
                "MozTransition": "background 0.25s",
                "WebkitTransition": "background 0.25s",
                "background": "#486c89",
                "borderRadius": 10,
                "cursor": "pointer",
                "height": 20,
                "margin": 0,
                "position": "relative",
                "transition": "background 0.25s",
                "width": 40,
              }
            }
          />
          <div
            className="react-switch-handle"
            onClick={[Function]}
            onMouseDown={[Function]}
            onTouchCancel={[Function]}
            onTouchEnd={[Function]}
            onTouchMove={[Function]}
            onTouchStart={[Function]}
            style={
              Object {
                "MozTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                "WebkitTransition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                "background": "#ff806c",
                "border": 0,
                "borderRadius": "50%",
                "boxShadow": null,
                "cursor": "pointer",
                "display": "inline-block",
                "height": 18,
                "outline": 0,
                "position": "absolute",
                "top": 1,
                "transform": "translateX(1px)",
                "transition": "background-color 0.25s, transform 0.25s, box-shadow 0.15s",
                "width": 18,
              }
            }
          />
          <input
            aria-labelledby="toggle-persistence-storage"
            checked={false}
            disabled={false}
            name="persistence"
            onBlur={[Function]}
            onChange={[Function]}
            onFocus={[Function]}
            onKeyUp={[Function]}
            role="switch"
            style={
              Object {
                "border": 0,
                "clip": "rect(0 0 0 0)",
                "height": 1,
                "margin": -1,
                "overflow": "hidden",
                "padding": 0,
                "position": "absolute",
                "width": 1,
              }
            }
            type="checkbox"
          />
        </div>
        <img
          alt="Toggle persistence"
          className="b-options__infoIcon"
          data-for="options-persistence-info"
          data-tip={true}
          src="info.svg"
        />
        <div
          className="__react_component_tooltip place-top type-dark "
          data-id="tooltip"
          id="options-persistence-info"
        >
          Persist workflow data between executions
        </div>
      </form>
    </div>
  </div>
</div>
`;
